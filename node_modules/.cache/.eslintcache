[{"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\index.js":"1","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\App.js":"2","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\NoMatch.js":"3","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\Home.js":"4","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\Success.js":"5","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\Login.js":"6","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\Signup.js":"7","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\OrderHistory.js":"8","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\GlobalState.js":"9","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\auth.js":"10","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\mutations.js":"11","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\helpers.js":"12","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\queries.js":"13","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\reducers.js":"14","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\Cart\\index.js":"15","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\ProductList\\index.js":"16","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\actions.js":"17","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\CartItem\\index.js":"18","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\ProductItem\\index.js":"19","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\Nav\\index.js":"20","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\CategoryMenu\\index.js":"21","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\Jumbotron\\index.js":"22"},{"size":267,"mtime":1649909746953,"results":"23","hashOfConfig":"24"},{"size":1594,"mtime":1650467517751,"results":"25","hashOfConfig":"24"},{"size":371,"mtime":1633713861000,"results":"26","hashOfConfig":"24"},{"size":354,"mtime":1649909700953,"results":"27","hashOfConfig":"24"},{"size":1225,"mtime":1633713861000,"results":"28","hashOfConfig":"24"},{"size":1932,"mtime":1649900318761,"results":"29","hashOfConfig":"24"},{"size":2450,"mtime":1650467848004,"results":"30","hashOfConfig":"24"},{"size":1399,"mtime":1649900204524,"results":"31","hashOfConfig":"24"},{"size":604,"mtime":1649913927159,"results":"32","hashOfConfig":"24"},{"size":753,"mtime":1649913917063,"results":"33","hashOfConfig":"24"},{"size":816,"mtime":1650467933017,"results":"34","hashOfConfig":"24"},{"size":1437,"mtime":1649914093434,"results":"35","hashOfConfig":"24"},{"size":1141,"mtime":1649914183234,"results":"36","hashOfConfig":"24"},{"size":2196,"mtime":1650076823931,"results":"37","hashOfConfig":"24"},{"size":2810,"mtime":1650078149255,"results":"38","hashOfConfig":"24"},{"size":2085,"mtime":1649987695605,"results":"39","hashOfConfig":"24"},{"size":536,"mtime":1650076832999,"results":"40","hashOfConfig":"24"},{"size":1565,"mtime":1633713861000,"results":"41","hashOfConfig":"24"},{"size":1508,"mtime":1633713861000,"results":"42","hashOfConfig":"24"},{"size":1604,"mtime":1650466323666,"results":"43","hashOfConfig":"24"},{"size":1454,"mtime":1633713861000,"results":"44","hashOfConfig":"24"},{"size":234,"mtime":1633713861000,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"xl6p8m",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"49"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\index.js",[],[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\App.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\NoMatch.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\Home.js",["117"],[],"import React, { useState } from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from '../components/Cart';\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\Success.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\Login.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\Signup.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\pages\\OrderHistory.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\GlobalState.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\auth.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\mutations.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\helpers.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\queries.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\reducers.js",["118"],[],"import { useReducer } from 'react';\n\nimport {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from './actions';\n  \n  export const reducer = (state, action) => {\n    switch (action.type) {\n      // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n      case UPDATE_PRODUCTS:\n        return {\n          ...state,\n          products: [...action.products]\n        };\n      // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n      case UPDATE_CATEGORIES:\n        return {\n          ...state,\n          categories: [...action.categories]\n        };\n        case ADD_TO_CART:\n            return {\n              ...state,\n              cartOpen: true,\n              cart: [...state.cart, action.product]\n            };\n        case ADD_MULTIPLE_TO_CART:\n            return {\n              ...state,\n              cart: [...state.cart, ...action.products],\n            };\n        case REMOVE_FROM_CART:\n            let newState = state.cart.filter(product => {\n              return product._id !== action._id;\n            });\n\n            return {\n              ...state,\n              cartOpen: newState.length > 0,\n              cart: newState\n            };\n        case UPDATE_CART_QUANTITY:\n            return {\n              ...state,\n              cartOpen: true,\n              cart: state.cart.map(product => {\n                if (action._id === product._id) {\n                  product.purchaseQuantity = action.purchaseQuantity;\n                }\n                return product;\n              })\n            };\n        case CLEAR_CART:\n            return {\n              ...state,\n              cartOpen: false,\n              cart: []\n            };\n        case TOGGLE_CART:\n            return {\n              ...state,\n              cartOpen: !state.cartOpen\n            };\n      default:\n        return state;\n    }\n  };\n\n  export function useProductReducer(initialState) {\n    return useReducer(reducer, initialState);\n  }\n\n  ","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\Cart\\index.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\ProductList\\index.js",["119"],[],"import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ProductItem from '../ProductItem';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\n\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductList({}) {\n\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n  \n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  \n  useEffect(() => {\n    if(data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n  \n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n      // add else if to check if `loading` is undefined in `useQuery()` Hook\n    } else if (!loading) {\n      // since we're offline, get all of the data from the `products` store\n      idbPromise('products', 'get').then((products) => {\n        // use retrieved data to set global state for offline browsing\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n  \n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n  \n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              name={product.name}\n              image={product.image}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\utils\\actions.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\CartItem\\index.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\ProductItem\\index.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\Nav\\index.js",[],[],"C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\CategoryMenu\\index.js",["120"],[],"import React, { useEffect } from 'react';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\n\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\n\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu({}) {\n\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","C:\\Users\\HAYLEM SAKHRAOUI\\Desktop\\MERNG-STACK\\client\\src\\components\\Jumbotron\\index.js",[],[],{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"125","line":6,"column":3,"nodeType":"123","messageId":"124","endLine":6,"endColumn":26},{"ruleId":"126","severity":1,"message":"127","line":13,"column":22,"nodeType":"128","messageId":"129","endLine":13,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":11,"column":23,"nodeType":"128","messageId":"129","endLine":11,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'UPDATE_CURRENT_CATEGORY' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected"]